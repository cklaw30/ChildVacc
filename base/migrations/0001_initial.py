# Generated by Django 5.0.1 on 2024-02-03 14:30

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('age', models.IntegerField(default=0)),
                ('ic', models.CharField(max_length=12, unique=True)),
                ('avatar', models.ImageField(default='avatar.svg', null=True, upload_to='')),
            ],
            options={
                'ordering': ['age'],
            },
        ),
        migrations.CreateModel(
            name='HospitalVaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stored', models.IntegerField()),
                ('booked', models.IntegerField(default=0)),
                ('expiry', models.DateField()),
                ('status', models.CharField(choices=[('TOSHIP', 'ToShip'), ('TORECEIVE', 'ToReceive'), ('COMPLETED', 'Completed'), ('EXPIRED', 'Expired'), ('REPLACED', 'Replaced')], default='TOSHIP', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Vaccine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('startage', models.IntegerField()),
                ('endage', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('avatar', models.ImageField(default='avatar.svg', null=True, upload_to='')),
                ('contact', models.CharField(max_length=12, null=True)),
                ('address1', models.CharField(max_length=30)),
                ('address2', models.CharField(max_length=30)),
                ('postcode', models.CharField(max_length=5)),
                ('city', models.CharField(max_length=30)),
                ('state', models.CharField(max_length=20)),
                ('type', models.CharField(choices=[('PARENT', 'Parent'), ('HOSPITAL', 'Hospital'), ('ADMIN', 'Admin'), ('VACCINESUPPLIER', 'VaccineSupplier')], default='ADMIN', max_length=50)),
                ('status', models.CharField(choices=[('APPROVED', 'Approved'), ('PENDING', 'Pending'), ('RESTRICTED', 'Restricted')], default='PENDING', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('base.user',),
        ),
        migrations.CreateModel(
            name='Hospital',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('base.user',),
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('base.user',),
        ),
        migrations.CreateModel(
            name='VaccineSupplier',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('base.user',),
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.TimeField()),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('VACCINATED', 'Vaccinated')], default='SCHEDULED', max_length=50)),
                ('child', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.child')),
                ('hospitalvaccine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.hospitalvaccine')),
            ],
            options={
                'ordering': ['date', 'time'],
            },
        ),
        migrations.AddField(
            model_name='hospitalvaccine',
            name='vaccine',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.vaccine'),
        ),
        migrations.CreateModel(
            name='HealthInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(max_length=200)),
                ('healthinfo', models.TextField(blank=True, null=True)),
                ('date', models.DateTimeField(auto_now=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.admin')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='hospitalvaccine',
            name='hospital',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.hospital'),
        ),
        migrations.AddField(
            model_name='child',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.parent'),
        ),
    ]
